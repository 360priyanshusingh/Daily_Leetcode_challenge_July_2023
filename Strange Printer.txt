class Solution {
public:
int dp[101][101];
    
    int dfs(string s,int start, int end){
        if(start > end) return 0;

        if(dp[start][end]!=-1) {
            return dp[start][end];
        }

        int x=start;
        while(x+1 <=end && s[x]==s[x+1] ) x++;

        int ans=1+dfs(s,x+1,end);

        for(int k=x+1 ;k <=end ; k++){
            if(s[k]==s[start]){
                ans=min(ans,dfs(s,k,end)+dfs(s,x+1,k-1));

            }
        }

        return dp[start][end]=ans;

    }

    int strangePrinter(string s) {
        
        memset(dp,-1,sizeof(dp));
        return dfs(s,0,s.size()-1);
    }
};