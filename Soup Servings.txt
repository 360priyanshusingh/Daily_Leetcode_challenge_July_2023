class Solution {
public:
    map<pair<int,int>,double> dp;
    double dfs(int a,int b){
        if(a<=0 && b<=0 ) return 0.5;
        if(a<=0) return 1;
        if(b<=0) return  0;
        if(dp.find({a,b})!=dp.end()) return dp[{a,b}];
        return  dp[{a,b}]= 0.25 * (dfs(a-100,b) + dfs(a-75,b-25) + dfs(a-50,b-50) + dfs(a-25,b-75) ) ;
    }
    double soupServings(int n) {
        if(n>4750) return 1;
       return  dfs(n,n);
    }
};